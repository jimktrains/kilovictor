// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace kilovictor {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class Key;
class NumericKeyValue;
class NumericValue;

// ===================================================================

class NumericValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kilovictor.NumericValue) */ {
 public:
  NumericValue();
  virtual ~NumericValue();

  NumericValue(const NumericValue& from);

  inline NumericValue& operator=(const NumericValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NumericValue& default_instance();

  void Swap(NumericValue* other);

  // implements Message ----------------------------------------------

  inline NumericValue* New() const { return New(NULL); }

  NumericValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NumericValue& from);
  void MergeFrom(const NumericValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NumericValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // optional int64 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:kilovictor.NumericValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 value_;
  ::google::protobuf::int64 version_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static NumericValue* default_instance_;
};
// -------------------------------------------------------------------

class Key : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kilovictor.Key) */ {
 public:
  Key();
  virtual ~Key();

  Key(const Key& from);

  inline Key& operator=(const Key& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Key& default_instance();

  void Swap(Key* other);

  // implements Message ----------------------------------------------

  inline Key* New() const { return New(NULL); }

  Key* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Key& from);
  void MergeFrom(const Key& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Key* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:kilovictor.Key)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Key* default_instance_;
};
// -------------------------------------------------------------------

class NumericKeyValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:kilovictor.NumericKeyValue) */ {
 public:
  NumericKeyValue();
  virtual ~NumericKeyValue();

  NumericKeyValue(const NumericKeyValue& from);

  inline NumericKeyValue& operator=(const NumericKeyValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NumericKeyValue& default_instance();

  void Swap(NumericKeyValue* other);

  // implements Message ----------------------------------------------

  inline NumericKeyValue* New() const { return New(NULL); }

  NumericKeyValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NumericKeyValue& from);
  void MergeFrom(const NumericKeyValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NumericKeyValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .kilovictor.Key key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::kilovictor::Key& key() const;
  ::kilovictor::Key* mutable_key();
  ::kilovictor::Key* release_key();
  void set_allocated_key(::kilovictor::Key* key);

  // optional .kilovictor.NumericValue value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::kilovictor::NumericValue& value() const;
  ::kilovictor::NumericValue* mutable_value();
  ::kilovictor::NumericValue* release_value();
  void set_allocated_value(::kilovictor::NumericValue* value);

  // @@protoc_insertion_point(class_scope:kilovictor.NumericKeyValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::kilovictor::Key* key_;
  ::kilovictor::NumericValue* value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static NumericKeyValue* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NumericValue

// optional sint64 value = 1;
inline void NumericValue::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NumericValue::value() const {
  // @@protoc_insertion_point(field_get:kilovictor.NumericValue.value)
  return value_;
}
inline void NumericValue::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:kilovictor.NumericValue.value)
}

// optional int64 version = 2;
inline void NumericValue::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NumericValue::version() const {
  // @@protoc_insertion_point(field_get:kilovictor.NumericValue.version)
  return version_;
}
inline void NumericValue::set_version(::google::protobuf::int64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:kilovictor.NumericValue.version)
}

// -------------------------------------------------------------------

// Key

// optional bytes value = 1;
inline void Key::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Key::value() const {
  // @@protoc_insertion_point(field_get:kilovictor.Key.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Key::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kilovictor.Key.value)
}
inline void Key::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kilovictor.Key.value)
}
inline void Key::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kilovictor.Key.value)
}
inline ::std::string* Key::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:kilovictor.Key.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Key::release_value() {
  // @@protoc_insertion_point(field_release:kilovictor.Key.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Key::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:kilovictor.Key.value)
}

// -------------------------------------------------------------------

// NumericKeyValue

// optional .kilovictor.Key key = 1;
inline bool NumericKeyValue::has_key() const {
  return !_is_default_instance_ && key_ != NULL;
}
inline void NumericKeyValue::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::kilovictor::Key& NumericKeyValue::key() const {
  // @@protoc_insertion_point(field_get:kilovictor.NumericKeyValue.key)
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::kilovictor::Key* NumericKeyValue::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::kilovictor::Key;
  }
  // @@protoc_insertion_point(field_mutable:kilovictor.NumericKeyValue.key)
  return key_;
}
inline ::kilovictor::Key* NumericKeyValue::release_key() {
  // @@protoc_insertion_point(field_release:kilovictor.NumericKeyValue.key)
  
  ::kilovictor::Key* temp = key_;
  key_ = NULL;
  return temp;
}
inline void NumericKeyValue::set_allocated_key(::kilovictor::Key* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:kilovictor.NumericKeyValue.key)
}

// optional .kilovictor.NumericValue value = 2;
inline bool NumericKeyValue::has_value() const {
  return !_is_default_instance_ && value_ != NULL;
}
inline void NumericKeyValue::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
inline const ::kilovictor::NumericValue& NumericKeyValue::value() const {
  // @@protoc_insertion_point(field_get:kilovictor.NumericKeyValue.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::kilovictor::NumericValue* NumericKeyValue::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::kilovictor::NumericValue;
  }
  // @@protoc_insertion_point(field_mutable:kilovictor.NumericKeyValue.value)
  return value_;
}
inline ::kilovictor::NumericValue* NumericKeyValue::release_value() {
  // @@protoc_insertion_point(field_release:kilovictor.NumericKeyValue.value)
  
  ::kilovictor::NumericValue* temp = value_;
  value_ = NULL;
  return temp;
}
inline void NumericKeyValue::set_allocated_value(::kilovictor::NumericValue* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:kilovictor.NumericKeyValue.value)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace kilovictor

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
